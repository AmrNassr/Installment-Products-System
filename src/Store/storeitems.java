/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Store;
import hany.DBConnect;
import java.awt.ComponentOrientation;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.view.JasperViewer;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.TimeZone;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextField;

/**
 *
 * @author amnassar
 */
public final class storeitems extends javax.swing.JInternalFrame {

    /**
     * Creates new form book
     */
      
     PreparedStatement pst ;
     ResultSet rs;
     public String y ;
     public String datee;
     public  Calendar cal;
     String dayyy ;
     String smokerr ; 
     String sugarr ; 
     String pressurr;
    
   
    public storeitems(String x )throws IOException, ParseException {
        initComponents();
        
        company();
        category();
        clear();
         tablelord();
         TableCellRenderer rendererFromHeader = tdetails.getTableHeader().getDefaultRenderer();
JLabel headerLabel = (JLabel) rendererFromHeader;
headerLabel.setHorizontalAlignment(JLabel.CENTER);
        DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
        centerRenderer.setHorizontalAlignment( JLabel.CENTER );
        tdetails.getColumnModel().getColumn(0).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(1).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(2).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(3).setCellRenderer( centerRenderer ); 
         tdetails.getColumnModel().getColumn(4).setCellRenderer( centerRenderer );
         tdetails.getColumnModel().getColumn(5).setCellRenderer( centerRenderer ); 
          tdetails.getColumnModel().getColumn(6).setCellRenderer( centerRenderer );
          tdetails.getColumnModel().getColumn(7).setCellRenderer( centerRenderer );
          cal = new GregorianCalendar();
             
                int month=cal.get(Calendar.MONTH)+1;
             int year = cal.get(Calendar.YEAR);
                 int dayy =cal.get(Calendar.DAY_OF_MONTH);
             dayyy=String.valueOf(dayy);
 if(dayy == 1 || dayy == 2 || dayy == 3 || dayy == 4
         || dayy == 5 || dayy == 6 || dayy == 7 || dayy == 8 || dayy == 9 )
 {
      dayyy=String.valueOf(dayy);
     dayyy="0"+dayyy;
 }
           date1.setText(year+"-"+month+"-"+dayyy);
           datee=date1.getText().toString();
   if(x.equals("admin"))
        {
          
        }
      }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel16 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        delete = new javax.swing.JButton();
        cmcompany = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tdetails = new javax.swing.JTable();
        barcode = new javax.swing.JTextField();
        totalll = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cmcategory = new javax.swing.JComboBox();
        save3 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        precentage = new javax.swing.JTextField();
        price = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        save4 = new javax.swing.JButton();
        save5 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        serialid = new javax.swing.JLabel();
        date1 = new javax.swing.JLabel();

        jLabel16.setFont(new java.awt.Font("Sitka Text", 3, 24)); // NOI18N
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/71847608-close-up-of-handshake-on-city-background-with-abstract-sunlight-partnership-concept-double-exposure.jpg"))); // NOI18N

        setMaximumSize(new java.awt.Dimension(980, 690));
        setMinimumSize(new java.awt.Dimension(980, 690));
        setPreferredSize(new java.awt.Dimension(980, 690));

        jPanel10.setBackground(new java.awt.Color(0, 0, 0));
        jPanel10.setForeground(new java.awt.Color(255, 255, 255));
        jPanel10.setMinimumSize(new java.awt.Dimension(90, 34));
        jPanel10.setPreferredSize(new java.awt.Dimension(970, 690));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        delete.setBackground(new java.awt.Color(138, 203, 195));
        delete.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        delete.setText("مسح العنصر");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel10.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 540, 190, 40));

        cmcompany.setEditable(true);
        cmcompany.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        jPanel10.add(cmcompany, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 90, 220, 30));

        tdetails.setBackground(new java.awt.Color(138, 203, 195));
        tdetails.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tdetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "العدد", "المخزن", "السعر الكلي", "النسبة", "سعر المنتج", "الشركة", "كود المنتج", "اسم المنتج", "id"
            }
        ));
        tdetails.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tdetails.setRowHeight(25);
        tdetails.setRowMargin(2);
        tdetails.setSelectionBackground(new java.awt.Color(204, 255, 255));
        tdetails.setSelectionForeground(new java.awt.Color(0, 0, 0));
        tdetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tdetailsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tdetailsMouseEntered(evt);
            }
        });
        jScrollPane1.setViewportView(tdetails);
        if (tdetails.getColumnModel().getColumnCount() > 0) {
            tdetails.getColumnModel().getColumn(0).setMinWidth(60);
            tdetails.getColumnModel().getColumn(0).setPreferredWidth(60);
            tdetails.getColumnModel().getColumn(0).setMaxWidth(60);
            tdetails.getColumnModel().getColumn(2).setMinWidth(150);
            tdetails.getColumnModel().getColumn(2).setPreferredWidth(150);
            tdetails.getColumnModel().getColumn(2).setMaxWidth(150);
            tdetails.getColumnModel().getColumn(3).setMinWidth(60);
            tdetails.getColumnModel().getColumn(3).setPreferredWidth(60);
            tdetails.getColumnModel().getColumn(3).setMaxWidth(60);
            tdetails.getColumnModel().getColumn(4).setMinWidth(150);
            tdetails.getColumnModel().getColumn(4).setPreferredWidth(150);
            tdetails.getColumnModel().getColumn(4).setMaxWidth(150);
            tdetails.getColumnModel().getColumn(8).setMinWidth(1);
            tdetails.getColumnModel().getColumn(8).setPreferredWidth(1);
            tdetails.getColumnModel().getColumn(8).setMaxWidth(1);
        }

        jPanel10.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 930, 250));

        barcode.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel10.add(barcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 40, 230, 30));

        totalll.setEditable(false);
        totalll.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        totalll.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel10.add(totalll, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 140, 100, 30));

        jLabel9.setBackground(new java.awt.Color(255, 255, 255));
        jLabel9.setFont(new java.awt.Font("Arial", 1, 30)); // NOI18N
        jLabel9.setText("المخزن");
        jPanel10.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 90, 120, -1));

        cmcategory.setEditable(true);
        cmcategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-" }));
        jPanel10.add(cmcategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 90, 230, 30));

        save3.setBackground(new java.awt.Color(138, 203, 195));
        save3.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save3.setText("حفظ");
        save3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save3ActionPerformed(evt);
            }
        });
        jPanel10.add(save3, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 210, 100, 40));

        jLabel13.setBackground(new java.awt.Color(255, 255, 255));
        jLabel13.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel13.setText("الشركة التابع لها");
        jPanel10.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 90, 140, -1));

        jLabel19.setBackground(new java.awt.Color(255, 255, 255));
        jLabel19.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel19.setText("السعر");
        jPanel10.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 140, 90, 30));

        precentage.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        precentage.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        precentage.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                precentageKeyReleased(evt);
            }
        });
        jPanel10.add(precentage, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 140, 70, 30));

        price.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        price.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                priceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceKeyTyped(evt);
            }
        });
        jPanel10.add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 140, 100, 30));

        jLabel17.setBackground(new java.awt.Color(255, 255, 255));
        jLabel17.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel17.setText("النسبة");
        jPanel10.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(850, 140, 80, 30));

        save4.setBackground(new java.awt.Color(138, 203, 195));
        save4.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save4.setText("تفريغ");
        save4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save4ActionPerformed(evt);
            }
        });
        jPanel10.add(save4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 210, 110, 40));

        save5.setBackground(new java.awt.Color(138, 203, 195));
        save5.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        save5.setText("بحث");
        save5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save5ActionPerformed(evt);
            }
        });
        jPanel10.add(save5, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 210, 110, 40));

        jLabel18.setBackground(new java.awt.Color(255, 255, 255));
        jLabel18.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel18.setText("الباركود");
        jPanel10.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 90, -1));

        jLabel15.setBackground(new java.awt.Color(255, 255, 255));
        jLabel15.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel15.setText("اسم المنتج");
        jPanel10.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 40, 120, -1));

        name.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jPanel10.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 40, 220, 30));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/nYwGq3.jpg"))); // NOI18N
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 0, 0), 2));
        jPanel10.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 720));

        serialid.setText("jLabel1");
        jPanel10.add(serialid, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 650, -1, -1));

        date1.setText("jLabel1");
        jPanel10.add(date1, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 80, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 964, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, 637, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tdetailsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tdetailsMouseClicked
        DefaultTableModel tmodel =(DefaultTableModel)tdetails.getModel();
        //bid,name, price, publisher, book_type, b_code, date, category
        int selectrowindex=tdetails.getSelectedRow();
        serialid.setText(tmodel.getValueAt(selectrowindex, 8).toString());
        name.setText(tmodel.getValueAt(selectrowindex, 7).toString());
        barcode.setText(tmodel.getValueAt(selectrowindex, 6).toString());
        cmcompany.setSelectedItem(tmodel.getValueAt(selectrowindex, 5).toString());
        price.setText(tmodel.getValueAt(selectrowindex, 4).toString());
        precentage.setText(tmodel.getValueAt(selectrowindex, 3).toString());
        totalll.setText(tmodel.getValueAt(selectrowindex, 2).toString());
        cmcategory.setSelectedItem(tmodel.getValueAt(selectrowindex, 1).toString());
         
    }//GEN-LAST:event_tdetailsMouseClicked

    private void save4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save4ActionPerformed
        clear();
        tablelord();
    }//GEN-LAST:event_save4ActionPerformed

    private void save5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save5ActionPerformed
         try {
             String namee = name.getText();
             String pricee = price.getText();
             String barcodee = barcode.getText();
             String precentagee=precentage.getText();
             String companyy=cmcompany.getSelectedItem().toString();
             String categoryy=cmcategory.getSelectedItem().toString();
             
            
             String sqll = "SELECT * FROM hany.storeitemlist WHERE  1=1 ";
             if(!name.getText().trim().isEmpty())
             {
                 sqll=sqll+" AND name LIKE '%"+namee+"%'";
             }
             if(!price.getText().trim().isEmpty())
             {
                 sqll=sqll+" AND price LIKE '%"+pricee+"%'";
             }
              if(!precentage.getText().trim().isEmpty())
             {
                 sqll=sqll+" AND precentage LIKE '%"+precentagee+"%'";
             }
             if(!barcode.getText().trim().isEmpty())
             {
                 sqll=sqll+" AND barcode LIKE '%"+barcodee+"%'";
             }
             if(!cmcompany.getSelectedItem().toString().trim().isEmpty())
             {
                 sqll=sqll+" AND cmcompany LIKE '%"+companyy+"%'";
             }
              if(!cmcategory.getSelectedItem().toString().trim().isEmpty())
             {
                 sqll=sqll+" AND category LIKE '%"+categoryy+"%'";
             }
             pst=(PreparedStatement) DBConnect.con.prepareStatement(sqll);
             rs=pst.executeQuery();
             DefaultTableModel model =(DefaultTableModel)tdetails.getModel();
             model.setRowCount(0);
             int k = 0;
             while (rs.next())
             {
                 Object row[] = {
                     rs.getString("category"),
                       rs.getString("total"),
                        rs.getString("precentage"),
                        rs.getString("price"),
                        rs.getString("company"),
                        rs.getString("barcode"),
                        rs.getString("name"),
                        rs.getString("id"),
                      };
                 model.addRow(row);
                 k++;
             }
             for(int i = k ;i<11;i++)
             {
                 Object rowData[] = {
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                 };
                 model.addRow(rowData); 
             }
         } catch (SQLException ex) {
             Logger.getLogger(storeitems.class.getName()).log(Level.SEVERE, null, ex);
         }
          
    }//GEN-LAST:event_save5ActionPerformed

    private void save3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save3ActionPerformed
        try{
        String namee = name.getText();
        double precentt = Double.parseDouble(precentage.getText());
        double precenttx = (precentt/100)+1;
        double pricee= Double.parseDouble(price.getText());
        double totall = precenttx*pricee;
        String companyy =cmcompany.getSelectedItem().toString();
        String categoryy =cmcategory.getSelectedItem().toString();
        String barcodee = barcode.getText();
        if(serialid.getText().trim().isEmpty())
       {
       
        if( name.getText().trim().isEmpty() || price.getText().trim().isEmpty()  || precentt<0)
        {
            JOptionPane.showMessageDialog(this, "  من فضلك ادخل اسم المنتج كامله و النسبة الصحيحة");
        }
        else
        {
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد حفظ العمليه", "تاكيد العمليه", dialogButton);
            if(dialogResult == 0) {
                try{
                    String sql = "INSERT INTO hany.storeitemlist (company,barcode,total,price,name,precentage,category) VALUES"
                    + " ('"+companyy+"','"+barcodee+"','"+totall+"','"+pricee+"','"+namee+"','"+precentt+"','"+categoryy+"')";
                    pst = (PreparedStatement)DBConnect.con.prepareStatement(sql);
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "تم اضافه المنتج بنجاح");
                   clear();
                   tablelord();

                }
                catch(Exception e ){
                    JOptionPane.showMessageDialog(null,"المنتج موجود من قبل");
                }

            }
            else
            {JOptionPane.showMessageDialog(this, " تم الغاء العمليه");

            }

        }
       }
       else
       {
           try {
                  String sqla = "UPDATE hany.storeitemlist SET company='"+companyy+"',name='"+namee+"',barcode='"+barcodee+"',price='"+pricee+"'"
                          + ",total='"+totall+"',precentage='"+precentt+"', category='"+categoryy+"'"
                          + " where  id='"+serialid.getText()+"'";
                  pst=(PreparedStatement) DBConnect.con.prepareStatement(sqla);
                  pst.executeUpdate();
                  JOptionPane.showMessageDialog(this, "تم تعديل المنتج بنجاح");
                   clear();
                   tablelord();
              } catch (SQLException ex) {
                 
              }
       }
        }
        catch(Exception e ){
                    JOptionPane.showMessageDialog(null,"المبلغ غير صحيح");
                }
    }//GEN-LAST:event_save3ActionPerformed

    private void priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyTyped
         
    }//GEN-LAST:event_priceKeyTyped

    private void priceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyReleased
         double precentt = Double.parseDouble(precentage.getText()); 
        double precenttx = (precentt/100)+1;
        double pricee= Double.parseDouble(price.getText());
        double totall = precenttx*pricee;
        totalll.setText(""+totall);
    }//GEN-LAST:event_priceKeyReleased

    private void precentageKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precentageKeyReleased
        try
        {
      double precentt = Double.parseDouble(precentage.getText()); 
        double precenttx = (precentt/100)+1;
        double pricee= Double.parseDouble(price.getText());
        double totall = precenttx*pricee;
        totalll.setText(""+totall);
        }
        catch(Exception ex)
        {
        }
    }//GEN-LAST:event_precentageKeyReleased

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if(serialid.getText().trim().isEmpty())
        {
            JOptionPane.showMessageDialog(rootPane, "من فضلك اختر العنصر ");

        }
        else{
            int dialogButton = JOptionPane.YES_NO_OPTION;
            int dialogResult = JOptionPane.showConfirmDialog(this, "هل تريد حفظ العملية", "رسالة تاكيد ؟ ", dialogButton);
            if(dialogResult == 0) {
                try {
                    String sql = "DELETE FROM hany.storeitemlist WHERE id='"+serialid.getText()+"'";
                    pst=(PreparedStatement) DBConnect.con.prepareStatement(sql);
                    pst.execute();
                    serialid.setText("");
                    tablelord();
                } catch (SQLException ex) {

                }
            }
            else
            {

                JOptionPane.showMessageDialog(this, " الغاء");
            }
        }
    }//GEN-LAST:event_deleteActionPerformed

    private void tdetailsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tdetailsMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tdetailsMouseEntered


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField barcode;
    private javax.swing.JComboBox cmcategory;
    private javax.swing.JComboBox cmcompany;
    private javax.swing.JLabel date1;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField precentage;
    private javax.swing.JTextField price;
    private javax.swing.JButton save3;
    private javax.swing.JButton save4;
    private javax.swing.JButton save5;
    private javax.swing.JLabel serialid;
    private javax.swing.JTable tdetails;
    private javax.swing.JTextField totalll;
    // End of variables declaration//GEN-END:variables
public void clear()
{
    name.setText(""); 
    serialid.setText(""); 
    cmcompany.setSelectedIndex(0);
    cmcategory.setSelectedIndex(0);
    barcode.setText("");
    precentage.setText("");
    totalll.setText("");
    price.setText("");
    

}
public void tablelord()
{
    try {
           String sqll = "SELECT * FROM hany.storeitemlist order by name";
              pst=(PreparedStatement) DBConnect.con.prepareStatement(sqll);
            rs=pst.executeQuery();
            DefaultTableModel model =(DefaultTableModel)tdetails.getModel(); 
                model.setRowCount(0);
              int k = 0;
                while (rs.next())
                {
                    Object row[] = {
                        rs.getString("number"),
                        rs.getString("category"),
                        rs.getString("total"),
                        rs.getString("precentage"),
                        rs.getString("price"),
                        rs.getString("company"),
                        rs.getString("barcode"),
                        rs.getString("name"),
                        rs.getString("id"),
                    };
                    model.addRow(row);
                    k++;
                }
                for(int i = k ;i<11;i++)
                {
                 Object rowData[] = {
                       "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                     "",
                       };
                model.addRow(rowData);
                } 
        }
        catch (SQLException ex) {
            
        }
}
  
   public void company()
   {
        try {
             String sql="SELECT name  FROM hany.storecompany order by id";
             pst=(PreparedStatement) DBConnect.con.prepareStatement(sql);
             rs=pst.executeQuery();
             while(rs.next()){
                String namee = rs.getString("name");
                
                cmcompany.addItem(namee);
  
             }

         } catch (SQLException ex) {
              
         }
   }
 public void category()
   {
        try {
             String sql="SELECT name  FROM hany.storecategory order by name ";
             pst=(PreparedStatement) DBConnect.con.prepareStatement(sql);
             rs=pst.executeQuery();
             while(rs.next()){
                String name = rs.getString("name");
                
                cmcategory.addItem(name);
  
             }

         } catch (SQLException ex) {
             
         }
   }
}
